
name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Nuclear cache clear (MSW v2 fix)
      run: |
        echo "üßπ Performing nuclear cache clear for MSW v2..."
        rm -rf node_modules .vitest dist coverage .cache .tsbuildinfo
        rm -f package-lock.json yarn.lock pnpm-lock.yaml
        npm cache clean --force
        echo "‚úÖ Nuclear cache clear complete"

    - name: Install dependencies
      run: npm install

    - name: Verify MSW v2 compliance
      run: |
        echo "üîç Verifying MSW v2 compliance..."
        node src/test/verify-msw-v2.mjs
        echo "üì¶ Checking MSW version..."
        npm ls msw

    - name: Run unit tests (Vitest) - Nuclear mode
      run: |
        echo "üöÄ Running tests with nuclear cache clearing..."
        npx vitest run --no-cache --config vitest.config.ts
      env:
        NODE_ENV: test

    - name: Build application
      run: npm run build

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run E2E tests (Playwright)
      run: npx playwright test

    - name: Upload Vitest test results
      uses: actions/upload-artifact@v4
      if: always() && hashFiles('coverage/**') != ''
      with:
        name: vitest-results
        path: |
          coverage/
        retention-days: 30

    - name: Upload Playwright test results
      uses: actions/upload-artifact@v4
      if: always() && hashFiles('test-results/**') != ''
      with:
        name: playwright-results
        path: |
          test-results/
          playwright-report/
        retention-days: 30

    - name: Debug info on failure
      if: failure()
      run: |
        echo "üîç Debug information:"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "MSW version: $(npm ls msw || echo 'MSW not found')"
        echo "Test files:"
        find src/test -name "*.test.*" -type f | head -10
